---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: authentik-secret
    template:
      data:
        # Database Init
        INIT_POSTGRES_HOST: "${DB_HOST}"
        INIT_POSTGRES_DBNAME: "{{ .AK_POSTGRES_DB }}"
        INIT_POSTGRES_USER: "{{ .AK_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: "{{ .AK_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_USER: "{{ .DB_POSTGRES_SUPER_USER }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .DB_POSTGRES_SUPER_PASS }}"
        # Authentik
        AUTHENTIK_EMAIL__FROM: "{{ .AK_EMAIL_FROM }}"
        AUTHENTIK_EMAIL__HOST: "{{ .EM_SMTP_SERVER }}"
        AUTHENTIK_EMAIL__PASSWORD: "{{ .EM_SMTP_PASSWORD }}"
        AUTHENTIK_EMAIL__USERNAME: "{{ .EM_SMTP_USERNAME }}"
        AUTHENTIK_POSTGRESQL__NAME: "{{ .AK_POSTGRES_DB }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: "{{ .AK_POSTGRES_PASSWORD }}"
        AUTHENTIK_POSTGRESQL__USER: "{{ .AK_POSTGRES_USER }}"
        AUTHENTIK_REDIS__PASSWORD: "{{ .DF_DRAGONFLY_PASSWORD }}"
        AUTHENTIK_SECRET_KEY: "{{ .AK_SECRET_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY: "{{ .AK_S3_ACCESS_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY: "{{ .AK_S3_SECRET_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME: "{{ .AK_S3_BUCKET }}"
        AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT: "https://{{ .AK_S3_ENDPOINT }}"
        AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN: "{{ .AK_S3_ENDPOINT }}/{{ .AK_S3_BUCKET }}"
        # GeoIP Updater
        GEOIPUPDATE_ACCOUNT_ID: "{{ .AK_GEOIP_ACCOUNT_ID }}"
        GEOIPUPDATE_LICENSE_KEY: "{{ .AK_GEOIP_LICENSE_KEY }}"
  dataFrom:
    - extract:
        key: authentik
      rewrite: [{regexp: {source: (.*), target: AK_$1}}]
    - extract:
        key: dragonfly
      rewrite: [{regexp: {source: (.*), target: DF_$1}}]
    - extract:
        key: cloudnative-pg
      rewrite: [{regexp: {source: (.*), target: DB_$1}}]
    - extract:
        key: smtp
      rewrite: [{regexp: {source: (.*), target: EM_$1}}]
