---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 1h
  chart:
    spec:
      chart: authentik
      version: 2025.6.3
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: authentik
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
  values:
    # Global configuration
    global:
      priorityClassName: system-cluster-critical
      podAnnotations:
        reloader.stakater.com/auto: "true"
      deploymentStrategy:
        type: RollingUpdate
      env:
        - name: AUTHENTIK_REDIS__DB
          value: "1"
        - name: TZ
          value: "${TIMEZONE}"
      envFrom:
        - secretRef:
            name: &secret authentik-secret
      volumeMounts:
        - name: config
          mountPath: /media
          subPath: media
        - name: config
          mountPath: /templates
          subPath: templates
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: authentik-config

    # Authentik configuration
    authentik:
      disable_startup_analytics: true
      disable_update_check: false
      email:
        port: 587
        timeout: 30
        use_tls: true
      error_reporting:
        enabled: false
      events:
        context_processors:
          geoip: "/geoip/GeoLite2-City.mmdb"
          asn: "/geoip/GeoLite2-ASN.mmdb"
      log_level: "info"
      postgresql:
        host: "${DB_SERVER}"
      redis:
        host: "${REDIS_SERVER}"

    # GeoIP Updater
    geoip:
      enabled: true
      editionIds: "GeoLite2-City GeoLite2-ASN"
      existingSecret:
        secretName: *secret
        accountId: "GEOIPUPDATE_ACCOUNT_ID"
        licenseKey: "GEOIPUPDATE_LICENSE_KEY"
      updateInterval: 24
      resources:
        requests:
          cpu: 5m
          memory: 128Mi
        limits:
          memory: 256Mi

    # Authentik Server
    server:
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
          envFrom:
            - secretRef:
                name: *secret
      replicas: 1
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi
      volumeMounts:
        - name: custom-assets
          mountPath: /web/dist/custom.css
          subPath: custom.css
      volumes:
        - name: custom-assets
          configMap:
            name: authentik-custom-assets
      containerSecurityContext:
        readOnlyRootFilesystem: true
      route:
        main:
          enabled: true
          hostnames:
            - "auth.${DOMAIN_ID}"
          parentRefs:
            - name: external
              namespace: kube-system
              sectionName: https-id

    # Authentik Worker
    worker:
      replicas: 1
      containerSecurityContext:
        readOnlyRootFilesystem: true
      resources:
        requests:
          cpu: 80m
          memory: 512Mi
        limits:
          memory: 1Gi

    # Prometheus
    prometheus:
      rules:
        enabled: true
        namespace: security
