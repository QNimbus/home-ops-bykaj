---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_APP/./-}"
spec:
  secretName: "${DOMAIN_APP/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_APP}"
  dnsNames: ["${DOMAIN_APP}", "*.${DOMAIN_APP}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_DEV/./-}"
spec:
  secretName: "${DOMAIN_DEV/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_DEV}"
  dnsNames: ["${DOMAIN_DEV}", "*.${DOMAIN_DEV}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "coder-${DOMAIN_DEV/./-}"
spec:
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "development"
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  secretName: "coder-${DOMAIN_DEV/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "coder.${DOMAIN_DEV}"
  dnsNames: ["coder.${DOMAIN_DEV}", "*.coder.${DOMAIN_DEV}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_ID/./-}"
spec:
  secretName: "${DOMAIN_ID/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_ID}"
  dnsNames: ["${DOMAIN_ID}", "*.${DOMAIN_ID}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_IO/./-}"
spec:
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "infrastructure"
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  secretName: "${DOMAIN_IO/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_IO}"
  dnsNames: ["${DOMAIN_IO}", "*.${DOMAIN_IO}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_LOL/./-}"
spec:
  secretName: "${DOMAIN_LOL/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_LOL}"
  dnsNames: ["${DOMAIN_LOL}", "*.${DOMAIN_LOL}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_NET/./-}"
spec:
  secretName: "${DOMAIN_NET/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_NET}"
  dnsNames: ["${DOMAIN_NET}", "*.${DOMAIN_NET}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "home-${DOMAIN_NET/./-}"
spec:
  secretName: "home-${DOMAIN_NET/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "home.${DOMAIN_NET}"
  dnsNames: ["home.${DOMAIN_NET}", "*.home.${DOMAIN_NET}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "kvm-home-${DOMAIN_NET/./-}"
spec:
  secretName: "kvm-home-${DOMAIN_NET/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "kvm.home.${DOMAIN_NET}"
  dnsNames: ["kvm.home.${DOMAIN_NET}", "*.kvm.home.${DOMAIN_NET}"]
---
# yaml-language-server: $schema=https://schemas.bykaj.io/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${DOMAIN_ST/./-}"
spec:
  secretName: "${DOMAIN_ST/./-}-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${DOMAIN_ST}"
  dnsNames: ["${DOMAIN_ST}", "*.${DOMAIN_ST}"]
