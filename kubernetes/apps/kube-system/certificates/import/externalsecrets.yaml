---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_APP/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_APP/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_APP},${DOMAIN_APP}"
          cert-manager.io/certificate-name: "${DOMAIN_APP/./-}"
          cert-manager.io/common-name: "${DOMAIN_APP}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_APP/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_DEV/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_DEV/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_DEV},${DOMAIN_DEV}"
          cert-manager.io/certificate-name: "${DOMAIN_DEV/./-}"
          cert-manager.io/common-name: "${DOMAIN_DEV}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_DEV/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "coder-${DOMAIN_DEV/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "coder-${DOMAIN_DEV/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.coder.${DOMAIN_DEV},coder.${DOMAIN_DEV}"
          cert-manager.io/certificate-name: "coder-${DOMAIN_DEV/./-}"
          cert-manager.io/common-name: "coder.${DOMAIN_DEV}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
          reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "development"
          reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "coder-${DOMAIN_DEV/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_ID/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_ID/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_ID},${DOMAIN_ID}"
          cert-manager.io/certificate-name: "${DOMAIN_ID/./-}"
          cert-manager.io/common-name: "${DOMAIN_ID}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_ID/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_IO/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_IO/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_IO},${DOMAIN_IO}"
          cert-manager.io/certificate-name: "${DOMAIN_IO/./-}"
          cert-manager.io/common-name: "${DOMAIN_IO}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
          reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "infrastructure"
          reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_IO/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_LOL/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_LOL/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_LOL},${DOMAIN_LOL}"
          cert-manager.io/certificate-name: "${DOMAIN_LOL/./-}"
          cert-manager.io/common-name: "${DOMAIN_LOL}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_LOL/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_NET/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_NET/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_NET},${DOMAIN_NET}"
          cert-manager.io/certificate-name: "${DOMAIN_NET/./-}"
          cert-manager.io/common-name: "${DOMAIN_NET}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_NET/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "home-${DOMAIN_NET/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "home-${DOMAIN_NET/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.home.${DOMAIN_NET},home.${DOMAIN_NET}"
          cert-manager.io/certificate-name: "home-${DOMAIN_NET/./-}"
          cert-manager.io/common-name: "home.${DOMAIN_NET}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "home-${DOMAIN_NET/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "kvm-home-${DOMAIN_NET/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "kvm-home-${DOMAIN_NET/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.kvm.home.${DOMAIN_NET},kvm.home.${DOMAIN_NET}"
          cert-manager.io/certificate-name: "kvm-home-${DOMAIN_NET/./-}"
          cert-manager.io/common-name: "kvm.home.${DOMAIN_NET}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "kvm-home-${DOMAIN_NET/./-}-tls"
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://schemas.bykaj.io/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_ST/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_ST/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_ST},${DOMAIN_ST}"
          cert-manager.io/certificate-name: "${DOMAIN_ST/./-}"
          cert-manager.io/common-name: "${DOMAIN_ST}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: "${DOMAIN_ST/./-}-tls"
        decodingStrategy: Base64