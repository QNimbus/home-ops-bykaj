---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app whisparr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/reload: &secret whisparr-secret
        containers:
          app:
            image:
              repository: ghcr.io/hotio/whisparr
              tag: v3-3.0.0.1143@sha256:7e92b5fd84d609ea8377f5d4fea10f444a76fb253f5e629f2c118faf6f6dfe7e
            env:
              TZ: "${TIMEZONE}"
              PUID: "4000"
              PGID: "4000"
              WHISPARR__ANALYTICS_ENABLED: "False"
              WHISPARR__AUTHENTICATION_METHOD: "External"
              WHISPARR__AUTHENTICATION_REQUIRED: "DisabledForLocalAddresses"
              WHISPARR__BRANCH: "nightly"
              WHISPARR__INSTANCE_NAME: "Whisparr"
              WHISPARR__LOG__DBENABLED: "False"
              WHISPARR__LOG_LEVEL: "info"
              WHISPARR__PORT: &port 6969
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 4000
        runAsGroup: 4000
        fsGroup: 4000
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        existingClaim: whisparr-config
        globalMounts:
          - path: /config
      backups:
        type: nfs
        server: "${NFS_SERVER}"
        path: /mnt/vault-alpha/Backups
        globalMounts:
          - path: /mnt/backups
            subPath: Apps/Whisparr
      downloads:
        type: nfs
        server: "${NFS_SERVER}"
        path: /mnt/vault-beta/Downloads
        globalMounts:
          - path: /mnt/downloads
      media:
        type: nfs
        server: "${NFS_SERVER}"
        path: /mnt/vault-beta/Private
        globalMounts:
          - path: /mnt/private
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /config/logs
            subPath: logs
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${DOMAIN_APP_APPS}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https-app-apps
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
