---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  chartRef:
    kind: OCIRepository
    name: audiobookshelf
  interval: 1h
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.29.0@sha256:dd4a3079d26bfe9f0ea63de3e3eff483dfa25fef05ef850a5a9d121dca3794b2
            env:
              AUDIOBOOKSHELF_GID: 1000
              AUDIOBOOKSHELF_UID: 1000
              CONFIG_PATH: &configPath "/config"
              HOST: "0.0.0.0"
              METADATA_PATH: "/config/metadata"
              PORT: &port 80
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: audiobookshelf-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 20m
                memory: 128Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    ingress:
      ts:
        className: tailscale
        hosts:
          - host: &host ${GATUS_SUBDOMAIN:=${APP}}.${TAILSCALE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: *port
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: *configPath
      backups:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-alpha/Backups
        globalMounts:
          - path: /config/metadata/backups
            subPath: Apps/Audiobookshelf
      media:
        type: nfs
        server: "${NAS_HOST}"
        path: /mnt/vault-alpha/Media
        globalMounts:
          - path: /mnt/media
            subPath: Books/Audiobooks
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /.npm
            subPath: cache
          - path: /config/metadata/logs
            subPath: logs
          - path: /tmp
            subPath: tmp
    route:
      audiobookshelf:
        hostnames: ["${GATUS_DOMAIN:=${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"]
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: *app
                port: *port
    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
