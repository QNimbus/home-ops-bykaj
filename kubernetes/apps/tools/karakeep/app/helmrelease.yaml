---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app karakeep
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      karakeep:
        forceRename: *app
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-migrate: &container
            image:
              repository: ghcr.io/karakeep-app/karakeep
              tag: 0.26.0@sha256:f575a34ed3f8975225c156786442f177846126cf27d7fd37350f3af23c549d22
            workingDir: /db_migrations
            command:
              - node
              - index.js
            env:
              # ASSET_STORE_S3_FORCE_PATH_STYLE: "true"
              BROWSER_CONNECT_ONDEMAND: "true"
              BROWSER_WEBSOCKET_URL: ws://karakeep-browserless:3000/chromium/playwright?token=$(TOKEN)&blockAds=true&launch={"stealth":true}
              COREPACK_INTEGRITY_KEYS: "0"
              CRAWLER_DOWNLOAD_BANNER_IMAGE: "true"
              CRAWLER_ENABLE_ADBLOCKER: "true"
              CRAWLER_FULL_PAGE_ARCHIVE: "true"
              CRAWLER_FULL_PAGE_SCREENSHOT: "true"
              CRAWLER_SCREENSHOT_TIMEOUT_SEC: "30"
              CRAWLER_STORE_SCREENSHOT: "true"
              DATA_DIR: "/data"
              DISABLE_NEW_RELEASE_CHECK: "true"
              DISABLE_PASSWORD_AUTH: "true"
              DISABLE_SIGNUPS: "false"
              INFERENCE_ENABLE_AUTO_SUMMARIZATION: "true"
              INFERENCE_ENABLE_AUTO_TAGGING: "true"
              INFERENCE_IMAGE_MODEL: "gpt-4o-mini"
              INFERENCE_LANG: "english"
              INFERENCE_TEXT_MODEL: "gpt-4.1-mini"
              MEILI_ADDR: "http://meilisearch.database:7700"
              NEXTAUTH_URL: "https://${GATUS_DOMAIN:=${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
              OAUTH_ALLOW_DANGEROUS_EMAIL_ACCOUNT_LINKING: "true"
              OAUTH_PROVIDER_NAME: "Cetana ID"
              OAUTH_SCOPE: "openid profile email"
              OCR_LANGS: "eng,nld"
              RATE_LIMITING_ENABLED: "true"
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: &secret karakeep-secret
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities: {drop: [ALL]}
        containers:
          web:
            <<: *container
            workingDir: /app/apps/web
            command:
              - node
              - server.js
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 1Gi
          worker:
            <<: *container
            workingDir: /app/apps/workers
            command:
              - npm
              - run
              - start:prod
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 1Gi

      browserless:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/browserless/chromium
              tag: v2.34.1@sha256:eeac26dc8da5bad6ff321acc3692d614da9ffc95ba0df7af944ded6649787ce5
              pullPolicy: IfNotPresent
            env:
              DEBUG: "browserless*,-*:trace,-*:verbose"
              CONCURRENT: "5"
              ENABLE_DEBUGGER: "false"
              TIMEOUT: "60000"
              TOKEN:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: TOKEN
              TZ: "${TIMEZONE}"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2Gi
            securityContext:
              runAsUser: 999
              runAsGroup: 999
              allowPrivilegeEscalation: false
              capabilities: {drop: [ALL]}

    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

    persistence:
      config:
        existingClaim: karakeep-config
        advancedMounts:
          karakeep:
            init-migrate: &data
              - path: /data
            web: *data
            worker: *data
      tmpfs:
        type: emptyDir
        advancedMounts:
          karakeep:
            init-migrate: &cache
              - path: /app/apps/web/.next/cache
                subPath: cache
            web: *cache
            worker: *cache
        globalMounts:
          - path: /tmp
            subPath: tmp

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Tools"
          gethomepage.dev/name: "${GATUS_NAME}"
          gethomepage.dev/icon: "sh-karakeep.svg"
          gethomepage.dev/widget.type: "karakeep"
          gethomepage.dev/widget.url: "https://${GATUS_DOMAIN:=${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_KARAKEEP_API_KEY}}` }}"
          gethomepage.dev/widget.fields: '["bookmarks", "favorites", "lists", "highlights"]'
        hostnames:
          - "${GATUS_DOMAIN:=${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https-app
        rules:
          - backendRefs:
              - identifier: *app
                port: &port 3000

    service:
      karakeep:
        primary: true
        controller: *app
        ports:
          http:
            port: *port
      browserless:
        controller: browserless
        ports:
          http:
            port: 3000

