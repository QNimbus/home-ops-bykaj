---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dsmr-reader
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      dsmr-reader:
        annotations:
          reloader.stakater.com/reload: &secret dsmr-reader-secret
        containers:
          db:
            image:
              repository: postgres
              tag: "16"
            env:
              - name: PG_TZ
                value: "${TIMEZONE}"
              - name: POSTGRES_DB
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_DB
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_USER
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_PASSWORD
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - pg_isready
                      - -U
                      - dsmrreader
                      - -d
                      - dsmrreader
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 5m
                memory: 256Mi
              limits:
                memory: 512Mi
          app:
            image:
              repository: ghcr.io/xirixiz/dsmr-reader-docker
              tag: "5.11.0-2025.01.03"
            dependsOn:
              - db
            env:
              # DUID: "4000"
              # DGID: "4000"
              DJANGO_DATABASE_ENGINE: "django.db.backends.postgresql"
              DJANGO_DATABASE_HOST: "localhost"
              DJANGO_DATABASE_PORT: "5432"
              DJANGO_TIME_ZONE: "${TIMEZONE}"
              DSMRREADER_LOGLEVEL: "error"
              DSMRREADER_OPERATION_MODE: "api_server"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        existingClaim: dsmr-reader-config
        advancedMounts:
          dsmr-reader:
            db:
              - path: /var/lib/postgresql/data
                subPath: postgresql
      backups:
        type: nfs
        server: "${NFS_SERVER}"
        path: /mnt/vault-alpha/Backups
        globalMounts:
          - path: /mnt/backups
            subPath: Apps/DSMR-Reader
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
    route:
      app:
        hostnames:
          - "dsmr.${DOMAIN_APP_APPS}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https-app-apps
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    service:
      app:
        primary: true
        controller: *app
        ports:
          http:
            port: *port
