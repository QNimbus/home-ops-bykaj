---
# yaml-language-server: $schema=https://schemas.bykaj.io/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &appname monica
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      monica:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: monica-secret
        containers:
          app: &app
            image:
              repository: monica
              tag: 5.0.0-beta.5-apache@sha256:ddb2e67b1e91ed69b200cdb12a6c6a7dde09bdec89e25f55aa89f3db31188a5a
            env:
              # Ref: https://github.com/monicahq/monica/blob/4.x/.env.example
              ALLOW_STATISTICS_THROUGH_PUBLIC_API_ACCESS: "false"
              APP_DISABLE_SIGNUP: "false"
              APP_ENV: "production"
              APP_SIGNUP_DOUBLE_OPTIN: "true"
              APP_TRUSTED_CLOUDFLARE: "true"
              APP_TRUSTED_PROXIES: "127.0.0.1/32,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
              APP_URL: "https://monica.${DOMAIN_APP_APPS}"
              CACHE_DRIVER: "redis"
              DAV_ENABLED: "true"
              DB_CONNECTION: "pgsql"
              DB_HOST: "${DB_SERVER}"
              DB_PORT: "5432"
              DEFAULT_MAX_STORAGE_SIZE: "1024" # 1024MB
              DEFAULT_MAX_UPLOAD_SIZE: "10240" # 10MB
              DEFAULT_STORAGE_LIMIT: "1024" # 1024MB
              ENABLE_GEOLOCATION: "true"
              ENABLE_WEATHER: "true"
              FILESYSTEM_DISK: "s3"
              HASH_LENGTH: "32"
              LOG_CHANNEL: "daily"
              MAIL_ENCRYPTION: "tls"
              MAIL_FROM_NAME: "Monica"
              MAIL_MAILER: "smtp"
              MAIL_PORT: "587"
              MEILISEARCH_HOST: http://meilisearch.database.svc.cluster.local:7700
              MFA_ENABLED: "true"
              QUEUE_CONNECTION: "redis"
              RATE_LIMIT_PER_MINUTE_API: "60"
              RATE_LIMIT_PER_MINUTE_OAUTH: "5"
              REDIS_HOST: "${REDIS_SERVER}"
              S3_PATH_STYLE: "true"
              SESSION_DRIVER: "redis"
              TZ: "${TIMEZONE}"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 512Mi
          cron:
            <<: *app
            command:
              - cron.sh
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 256Mi
          queue:
            <<: *app
            command:
              - queue.sh
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 256Mi
    persistence:
      config:
        existingClaim: monica-config
        globalMounts:
          - path: /var/www/html/storage
            subPath: monica
      backups:
        type: nfs
        server: "${NFS_SERVER}"
        path: /mnt/vault-alpha/Backups
        globalMounts:
          - path: /mnt/backups
            subPath: Apps/Monica
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${DOMAIN_APP_APPS}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https-app-apps
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    service:
      app:
        primary: true
        controller: *appname
        ports:
          http:
            port: *port
